function epsilonout=materials(Lambda,epsilon)
%takes a cell input and a wavelength and changes is to the permittivity
%value of the materials specified in the cells
%any numbers will be left alone


if iscell(epsilon)
    for ee=1:length(epsilon)
        temp=lower(epsilon{ee});
        if isequal('ag',temp)||isequal('silver',temp)
            epsilon{ee}=Ag_disp2(Lambda)^2;
        elseif isequal('au',temp)||isequal('gold',temp)
            epsilon{ee}=Au_disp2(Lambda)^2;
        elseif isequal('si',temp)||isequal('silicon',temp)
            epsilon{ee}=Si_disp2(Lambda)^2;
        elseif isequal('gaas',temp)||isequal('galliumarseinide',temp)||isequal('gallium arseinide',temp)
            epsilon{ee}=GaAs_disp2(Lambda)^2;
        elseif isequal('bsa',temp)
            epsilon{ee}=1.4542^2;   %refractive index of .01mg/mL bsa in water
        elseif isequal('water',temp)
            epsilon{ee}=1.332^2;
        elseif isequal('nordag',temp)||isequal('nord_ag',temp)||isequal('nordlander',temp)
            epsilon{ee}=Nordlander_Ag_disp(Lambda);
        elseif isequal('sin',temp)||isequal('silicon nitride',temp)
            epsilon{ee}=SiN_disp2(Lambda)^2;
        elseif isequal('ni',temp)||isequal('nickel',temp)
            epsilon{ee}=Ni_disp(Lambda)^2;
        end
    end

    epsilonout=cell2mat(epsilon);
else
    epsilonout=epsilon;
end


function result=Ag_disp2(lam)
%returns complex number that is refractive index for silver at given wavelength(nm)
%based on johnson-christie


data=[187.88	1.070	1.212
191.65	1.100	1.232
195.28	1.200	1.255
199.36	1.140	1.277
203.28	1.150	1.296
207.36	1.180	1.312
211.97	1.200	1.325
216.40	1.220	1.336
221.43	1.250	1.342
226.28	1.260	1.344
231.34	1.280	1.357
237.09	1.280	1.367
242.66	1.300	1.378
249.00	1.310	1.389
255.14	1.330	1.393
261.60	1.350	1.387
268.98	1.380	1.372
276.17	1.410	1.331
284.40	1.410	1.264
292.45	1.390	1.161
300.97	1.340	0.964
310.78	1.130	0.616
320.41	0.810	0.392
331.55	0.170	0.829
342.54	0.140	1.142
354.29	0.100	1.419
367.95	0.070	1.657
381.54	0.050	1.864
397.44	0.050	2.070
413.33	0.050	2.275
430.56	0.040	2.462
450.91	0.040	2.657
471.48	0.050	2.869
496.00	0.050	3.093
521.01	0.050	3.324
548.67	0.060	3.586
582.16	0.050	3.858
616.92	0.060	4.152
659.57	0.050	4.483
704.55	0.040	4.838
756.10	0.030	5.242
821.19	0.040	5.727
892.09	0.040	6.312
984.13	0.040	6.992
1087.72	0.040	7.795
1215.69	0.090	8.828
1393.26	0.130	10.100
1610.39	0.150	11.850
1937.50	0.240	14.080];


lambda=data(:,1);
n=data(:,2);
k=data(:,3);

result=interp1q(lambda,n,lam)+i.*interp1q(lambda,k,lam);

function result=Au_disp2(lam)
%returns complex number that is refractive index for gold at given wavelength(nm)
%based on johnson-christie

data=[187.88	1.28	1.188
191.65	1.32	1.203
195.28	1.34	1.226
199.36	1.33	1.251
203.28	1.33	1.277
207.36	1.3     1.304
211.97	1.3     1.35
216.40	1.3     1.387
221.43	1.3     1.427
226.28	1.31	1.46
231.34	1.3     1.497
237.09	1.32	1.536
242.66	1.32	1.577
249.00	1.33	1.631
255.14	1.33	1.688
261.60	1.35	1.749
268.98	1.38	1.803
276.17	1.43	1.847
284.40	1.47	1.869
292.45	1.49	1.878
300.97	1.53	1.889
310.78	1.53	1.893
320.41	1.54	1.898
331.55	1.48	1.883
342.54	1.48	1.871
354.29	1.5     1.866
367.95	1.48	1.895
381.54	1.46	1.933
397.44	1.47	1.952
413.33	1.46	1.958
430.56	1.45	1.948
450.91	1.38	1.914
471.48	1.31	1.849
496.00	1.04	1.833
521.01	0.62	2.081
548.67	0.43	2.455
582.16	0.29	2.863
616.92	0.21	3.272
659.57	0.14	3.697
704.55	0.13	4.103
756.10	0.14	4.542
821.19	0.16	5.083
892.09	1.17	5.663
984.13	0.22	6.35
1087.72	0.27	7.15
1215.69	0.35	8.145
1393.26	0.43	9.519
1610.39	0.56	11.21
1937.50	0.92	13.78];



lambda=data(:,1);
n=data(:,2);
k=data(:,3);

result=interp1q(lambda,n,lam)+i.*interp1q(lambda,k,lam);

function result=GaAs_disp2(lambda)
%lambda is input in nanometers
%will return complex refractive index of GaAs, real parts in result1, imag part in result2
%k is chosen so that n-i*k corresponds to absorption

data=[    0.2101    1.2880    2.5560
    0.2123    1.3040    2.5920
    0.2138    1.3110    2.6250
    0.2160    1.3210    2.6730
    0.2175    1.3250    2.7100
    0.2198    1.3390    2.7720
    0.2214    1.3490    2.8150
    0.2238    1.3670    2.8850
    0.2254    1.3830    2.9360
    0.2279    1.4100    3.0190
    0.2296    1.4300    3.0790
    0.2322    1.4680    3.1810
    0.2339    1.4990    3.2550
    0.2366    1.5520    3.3840
    0.2384    1.5990    3.4840
    0.2412    1.6990    3.6600
    0.2431    1.8020    3.7950
    0.2460    2.0440    3.9920
    0.2480    2.2730    4.0840
    0.2510    2.6540    4.1060
    0.2530    2.8900    4.0470
    0.2562    3.1870    3.8980
    0.2583    3.3420    3.7700
    0.2616    3.5110    3.5740
    0.2638    3.5980    3.4520
    0.2672    3.7080    3.2800
    0.2695    3.7690    3.1690
    0.2731    3.8500    3.0180
    0.2755    3.9130    2.9190
    0.2792    4.0040    2.7150
    0.2818    4.0150    2.5630
    0.2857    3.9810    2.3680
    0.2883    3.9390    2.2600
    0.2924    3.8640    2.1320
    0.2952    3.8100    2.0690
    0.2995    3.7360    2.0010
    0.3024    3.6920    1.9690
    0.3069    3.6340    1.9350
    0.3100    3.6010    1.9200
    0.3147    3.5590    1.9070
    0.3179    3.5380    1.9040
    0.3229    3.5120    1.9050
    0.3263    3.5010    1.9090
    0.3315    3.4880    1.9200
    0.3351    3.4850    1.9310
    0.3406    3.4890    1.9500
    0.3444    3.4950    1.9650
    0.3502    3.5130    1.9920
    0.3542    3.5310    2.0130
    0.3563    3.5410    2.0240
    0.3583    3.5530    2.0360
    0.3604    3.5660    2.0490
    0.3625    3.5800    2.0620
    0.3647    3.5960    2.0760
    0.3668    3.6140    2.0910
    0.3690    3.6350    2.1070
    0.3712    3.6570    2.1230
    0.3734    3.6810    2.1420
    0.3757    3.7090    2.1620
    0.3780    3.7400    2.1830
    0.3803    3.7760    2.2070
    0.3827    3.8180    2.2320
    0.3850    3.8710    2.2600
    0.3875    3.9380    2.2880
    0.3899    4.0230    2.3070
    0.3924    4.1260    2.3040
    0.3949    4.2290    2.2700
    0.3974    4.3130    2.2120
    0.4000    4.3730    2.1460
    0.4025    4.4130    2.0820
    0.4052    4.4390    2.0290
    0.4078    4.4620    1.9880
    0.4105    4.4830    1.9610
    0.4133    4.5090    1.9480
    0.4161    4.5500    1.9520
    0.4189    4.6260    1.9670
    0.4217    4.7550    1.9600
    0.4246    4.9170    1.8850
    0.4275    5.0520    1.7210
    0.4305    5.1070    1.5290
    0.4335    5.1020    1.3530
    0.4366    5.0650    1.2060
    0.4397    5.0150    1.0880
    0.4428    4.9590    0.9910
    0.4460    4.9020    0.9120
    0.4492    4.8450    0.8460
    0.4525    4.7930    0.7890
    0.4558    4.7410    0.7390
    0.4592    4.6940    0.6960
    0.4626    4.6490    0.6590
    0.4661    4.6050    0.6260
    0.4696    4.5670    0.5950
    0.4732    4.5250    0.5690
    0.4769    4.4920    0.5390
    0.4806    4.4560    0.5170
    0.4843    4.4230    0.4970
    0.4881    4.3920    0.4760
    0.4920    4.3620    0.4580
    0.4959    4.3330    0.4410
    0.4999    4.3050    0.4260
    0.5040    4.2790    0.4110
    0.5081    4.2540    0.3980
    0.5123    4.2290    0.3850
    0.5166    4.2050    0.3710
    0.5209    4.1830    0.3590
    0.5254    4.1620    0.3470
    0.5299    4.1410    0.3370
    0.5344    4.1200    0.3270
    0.5391    4.1000    0.3200
    0.5438    4.0820    0.3080
    0.5486    4.0630    0.3010
    0.5535    4.0450    0.2940
    0.5585    4.0290    0.2850
    0.5636    4.0130    0.2760
    0.5687    3.9980    0.2660
    0.5740    3.9830    0.2570
    0.5794    3.9680    0.2510
    0.5848    3.9540    0.2450
    0.5904    3.9400    0.2400
    0.5961    3.9270    0.2320
    0.6019    3.9140    0.2280
    0.6078    3.9020    0.2230
    0.6138    3.8900    0.2130
    0.6199    3.8780    0.2110
    0.6262    3.8670    0.2030
    0.6326    3.8560    0.1960
    0.6391    3.8460    0.1870
    0.6458    3.8360    0.1830
    0.6526    3.8260    0.1790
    0.6595    3.8170    0.1730
    0.6666    3.8090    0.1730
    0.6738    3.7990    0.1680
    0.6812    3.7920    0.1580
    0.6888    3.7850    0.1510
    0.6965    3.7790    0.1520
    0.7045    3.7720    0.1340
    0.7126    3.7620    0.1270
    0.7208    3.7520    0.1180
    0.7293    3.7420    0.1120
    0.7380    3.7340    0.1050
    0.7469    3.7250    0.1010
    0.7560    3.7160    0.0970
    0.7653    3.7070    0.0930
    0.7749    3.7000    0.0910
    0.7847    3.6930    0.0890
    0.7948    3.6850    0.0870
    0.8051    3.6790    0.0850
    0.8157    3.6720    0.0830
    0.8266    3.6660    0.0800
    0.886     3.614     0.00169];

data2=[0.9184 3.569
    0.9537    3.5388
    0.9919    3.5138
    1.033     3.492     
    1.078     3.4724
    1.127     3.4546
    1.181     3.4383
    1.240     3.423     
    1.305     3.4094
    1.378     3.3965
    1.459     3.3847
    1.55      3.3737
    1.771     3.3543
    1.907     3.3457]; %n values

data3=[.8984  .0025
       .9050  .0013
       1.000   0
       2.000   0]; %k values

wavelengthn=[1000*data(:,1);1000*data2(:,1)];
wavelengthk=[1000*data(:,1);1000*data3(:,1)];
n=[data(:,2);data2(:,2)];
k=[data(:,3);data3(:,2)];

result1=interp1q(wavelengthn,n,lambda);
result2=interp1q(wavelengthk,k,lambda);

result=result1+i*result2;

function result=plasma_disp2(freq)
%returns the comlpex permittivity (n^2) of a plasma

%if statement so that input can be either frequency or wavelength
if max(freq)<1e5
    c=3e8;
    freq=c./freq;
end


w=2*pi*freq;

Ne=(2/3)*1e20;

Ne=1e19;

wp=56.42*sqrt(Ne);
wb=2*pi*4e9;
vc=1e12;
vc=10e6;
vc=30e9;



% result=1-(wp/w)^2/((1-i*vc/w)+wb/w);
% 
%result=1-(wp/w)^2/((1-i*vc/w)+wb/w);

%possible plasma models, representing theta=90 and either plus or minus
%used in the denominator
result=1-(wp/w)^2/(1-i*vc/w-((wb/w)^2)/(1-i*vc/w-(wp/w)^2));


result=1-(wp/w)^2/(1-i*vc/w);



result=conj(result);

function result=Si_disp2(lambda)

data=[4.12	0.3009			5.012	4.086
    4.1     0.3024          5.02	3.979
    4.08	0.3039			5.021	3.885
    4.06	0.3054			5.02	3.798
    4.04	0.3069			5.018	3.72
    4.02	0.3084			5.015	3.65
    4       0.31			5.01	3.587
    3.98	0.3115			5.009	3.529
    3.96	0.3131			5.01	3.477
    3.94	0.3147			5.009	3.429
    3.92	0.3163			5.012	3.386
    3.9     0.3179			5.016	3.346
    3.88	0.3195			5.021	3.31
    3.86	0.3212			5.029	3.275
    3.84	0.3229			5.04	3.242
    3.82	0.3246			5.052	3.211
    3.8     0.3263			5.065	3.182
    3.78	0.328			5.079	3.154
    3.76	0.3297			5.095	3.128
    3.74	0.3315			5.115	3.103
    3.72	0.3333			5.134	3.079
    3.7     0.3351			5.156	3.058
    3.68	0.3369			5.179	3.039
    3.66	0.3388			5.204	3.021
    3.64	0.3406			5.231	3.007
    3.62	0.3425			5.261	2.995
    3.6     0.3444			5.296	2.987
    3.58	0.3463			5.336	2.983
    3.56	0.3483			5.383	2.984
    3.54	0.3502			5.442	2.989
    3.52	0.3522			5.515	2.999
    3.5     0.3542			5.61	3.014
    3.48	0.3563			5.733	3.026
    3.46	0.3583			5.894	3.023
    3.44	0.3604			6.089	2.982
    3.42	0.3625			6.308	2.881
    3.4     0.3647			6.522	2.705
    3.38	0.3668			6.695	2.456
    3.36	0.369			6.796	2.169
    3.34	0.3712			6.829	1.87
    3.32	0.3734			6.799	1.577
    3.3     0.3757			6.709	1.321
    3.28	0.378			6.585	1.11
    3.26	0.3803			6.452	0.945
    3.24	0.3827			6.316	0.815
    3.22	0.385			6.185	0.714
    3.2     0.3875			6.062	0.63
    3.18	0.3899			5.948	0.561
    3.16	0.3924			5.842	0.505
    3.14	0.3949			5.744	0.456
    3.12	0.3974			5.654	0.416
    3.1     0.4             5.57	0.387
    3.08	0.4025			5.493	0.355
    3.06	0.4052			5.42	0.329
    3.04	0.4078			5.349	0.313
    3.02	0.4105			5.284	0.291
    3       0.4133			5.222	0.269
    2.98	0.4161			5.164	0.255
    2.96	0.4189			5.109	0.244
    2.94	0.4217			5.058	0.228
    2.92	0.4246			5.009	0.211
    2.9     0.4275			4.961	0.203
    2.88	0.4305			4.916	0.194
    2.86	0.4335			4.872	0.185
    2.84	0.4366			4.831	0.185
    2.82	0.4397			4.791	0.17
    2.8     0.4428			4.753	0.163
    2.78	0.446			4.718	0.149
    2.76	0.4492			4.682	0.149
    2.74	0.4525			4.648	0.133
    2.72	0.4558			4.615	0.131
    2.7     0.4592			4.583	0.13
    2.68	0.4626			4.553	0.131
    2.66	0.4661			4.522	0.134
    2.64	0.4696			4.495	0.12
    2.62	0.4732			4.466	0.12
    2.6     0.4769			4.442	0.09
    2.58	0.4806			4.416	0.094
    2.56	0.4843			4.391	0.083
    2.54	0.4881			4.367	0.079
    2.52	0.492			4.343	0.077
    2.5     0.4959			4.32	0.073
    2.48	0.4999			4.298	0.073
    2.46	0.504			4.277	0.066
    2.44	0.5081			4.255	0.072
    2.42	0.5123			4.235	0.06
    2.4     0.5166			4.215	0.06
    2.38	0.5209			4.196	0.056
    2.36	0.5254			4.177	0.053
    2.34	0.5299			4.159	0.043
    2.32	0.5344			4.14	0.045
    2.3     0.5391			4.123	0.048
    2.28	0.5438			4.106	0.044
    2.26	0.5486			4.089	0.044
    2.24	0.5535			4.073	0.032
    2.22	0.5585			4.057	0.038
    2.2     0.5636			4.042	0.032
    2.18	0.5687			4.026	0.034
    2.16	0.574			4.012	0.03
    2.14	0.5794			3.997	0.027
    2.12	0.5848			3.983	0.03
    2.1     0.5904			3.969	0.03
    2.08	0.5961			3.956	0.027
    2.06	0.6019			3.943	0.025
    2.04	0.6078			3.931	0.025
    2.02	0.6138			3.918	0.024
    2       0.6199			3.906	0.022
    1.98	0.6262			3.893	0.022
    1.96	0.6326			3.882	0.019
    1.94	0.6391			3.87	0.018
    1.92	0.6458			3.858	0.017
    1.9     0.6526			3.847	0.016
    1.88	0.6595			3.837	0.016
    1.86	0.6666			3.826	0.015
    1.84	0.6738			3.815	0.014
    1.82	0.6812			3.805	0.013
    1.8     0.6888			3.796	0.013
    1.78	0.6965			3.787	0.013
    1.76	0.7045			3.778	0.012
    1.74	0.7126			3.768	0.011
    1.72	0.7208			3.761	0.011
    1.7     0.7293			3.752	0.01
    1.68	0.738			3.745	0.01
    1.66	0.7469			3.736	0.009
    1.64	0.756			3.728	0.009
    1.62	0.7653			3.721	0.008
    1.6     0.7749			3.714	0.008
    1.58	0.7847			3.705	0.007
    1.56	0.7948			3.697	0.007
    1.54	0.8051			3.688	0.006
    1.52	0.8157			3.681	0.006
    1.5     0.8266			3.673	0.005
    1.033	1.2             3.5193  0
    0.9037	1.372           3.5007  0
    0.8856	1.4             3.4876  0
    0.8093	1.532           3.4784  0
    0.7749	1.6             3.471   0
    0.731	1.696           3.4644  0
    0.6888	1.8             3.4578  0];

energy=data(:,1);
wavelength=1000*data(:,2);
n=data(:,3);
k=data(:,4);

result1=interp1q(wavelength,n,lambda);
result2=interp1q(wavelength,k,lambda);

result=result1+i*result2;


function result=Nordlander_Ag_disp(lambda)
%returns the permittivity of Ag used the nordlander paper with maier 2007
%phy. rev. B, it is assumed lambda is in nm
lambda=lambda*1e-9;
c=3e8;
omega=2*pi*c/lambda;

einf=4.039;
omega_p=1.39077e16;
delta=3.13999e13;

result=einf-(omega_p^2/(omega^2+i*omega*delta));


function result=SiN_disp2(lam)
%returns complex number that is refractive index for stochiometric SiN at given wavelength(nm)
%based on data from Selcuk


data=[500	3.2017	0.55317	2.2046	0.0083057
510	3.1807	0.48819	2.201	0.0074126
520	3.161	0.43291	2.1975	0.0066445
530	3.1425	0.38564	2.1942	0.0059806
540	3.1251	0.34501	2.191	0.0054041
550	3.1087	0.30991	2.188	0.0049012
560	3.0933	0.27945	2.1852	0.0044607
570	3.0787	0.2529	2.1825	0.0040731
580	3.0649	0.22966	2.1799	0.0037309
590	3.0519	0.20924	2.1774	0.0034277
600	3.0396	0.19122	2.175	0.003158
610	3.0279	0.17528	2.1728	0.0029173
620	3.0168	0.16111	2.1706	0.0027019
630	3.0063	0.14849	2.1685	0.0025085
640	2.9962	0.13721	2.1666	0.0023344
650	2.9867	0.12709	2.1647	0.0021771
660	2.9776	0.11799	2.1628	0.0020348
670	2.969	0.10979	2.1611	0.0019056
680	2.9607	0.10237	2.1594	0.001788
690	2.9529	0.095649	2.1578	0.0016808
700	2.9453	0.089542	2.1563	0.0015828
710	2.9381	0.083981	2.1548	0.0014931
720	2.9313	0.078906	2.1534	0.0014107
730	2.9247	0.074264	2.152	0.001335
740	2.9184	0.07001	2.1507	0.0012652
750	2.9123	0.066103	2.1494	0.0012007
760	2.9065	0.062509	2.1482	0.0011411
770	2.901	0.059196	2.147	0.001086
780	2.8956	0.056137	2.1459	0.0010347
790	2.8905	0.053308	2.1448	9.8716E-4
800	2.8856	0.050687	2.1437	9.4287E-4
810	2.8808	0.048254	2.1427	9.0159E-4
820	2.8763	0.045994	2.1417	8.6306E-4
830	2.8719	0.04389	2.1408	8.2705E-4
840	2.8676	0.041929	2.1398	7.9334E-4
850	2.8636	0.040099	2.139	7.6175E-4
860	2.8596	0.038388	2.1381	7.3211E-4
870	2.8558	0.036788	2.1373	7.0427E-4
880	2.8522	0.035288	2.1365	6.7808E-4
890	2.8486	0.033881	2.1357	6.5343E-4
900	2.8452	0.032559	2.1349	6.3018E-4
910	2.8419	0.031317	2.1342	6.0825E-4
920	2.8387	0.030147	2.1335	5.8754E-4
930	2.8357	0.029045	2.1328	5.6795E-4
940	2.8327	0.028005	2.1322	5.4941E-4
950	2.8298	0.027024	2.1315	5.3185E-4
960	2.827	0.026096	2.1309	5.152E-4
970	2.8243	0.025218	2.1303	4.994E-4
980	2.8217	0.024386	2.1297	4.8439E-4
990	2.8191	0.023598	2.1291	4.7012E-4
1000	2.8167	0.022851	2.1286	4.5654E-4
1010	2.8143	0.022141	2.128	4.4361E-4
1020	2.812	0.021467	2.1275	4.313E-4
1030	2.8097	0.020825	2.127	4.1955E-4
1040	2.8076	0.020215	2.1265	4.0834E-4
1050	2.8055	0.019634	2.126	3.9763E-4
1060	2.8034	0.01908	2.1256	3.874E-4
1070	2.8014	0.018551	2.1251	3.7762E-4
1080	2.7995	0.018046	2.1247	3.6826E-4
1090	2.7976	0.017564	2.1242	3.593E-4
1100	2.7957	0.017104	2.1238	3.5071E-4
1110	2.794	0.016663	2.1234	3.4247E-4
1120	2.7922	0.016241	2.123	3.3457E-4
1130	2.7905	0.015838	2.1226	3.2699E-4
1140	2.7889	0.015451	2.1222	3.1971E-4
1150	2.7873	0.01508	2.1219	3.1271E-4
1160	2.7857	0.014724	2.1215	3.0599E-4
1170	2.7842	0.014382	2.1212	2.9951E-4
1180	2.7828	0.014054	2.1208	2.9329E-4
1190	2.7813	0.013738	2.1205	2.8729E-4
1200	2.7799	0.013435	2.1202	2.8151E-4
1210	2.7785	0.013144	2.1199	2.7594E-4
1220	2.7772	0.012863	2.1195	2.7057E-4
1230	2.7759	0.012593	2.1192	2.6539E-4
1240	2.7746	0.012332	2.1189	2.6039E-4
1250	2.7734	0.012081	2.1187	2.5556E-4
1260	2.7722	0.011839	2.1184	2.509E-4
1270	2.771	0.011606	2.1181	2.4639E-4
1280	2.7699	0.011381	2.1178	2.4203E-4
1290	2.7687	0.011163	2.1176	2.3782E-4
1300	2.7676	0.010953	2.1173	2.3374E-4
1310	2.7666	0.01075	2.1171	2.2979E-4
1320	2.7655	0.010554	2.1168	2.2597E-4
1330	2.7645	0.010364	2.1166	2.2227E-4
1340	2.7635	0.01018	2.1163	2.1868E-4
1350	2.7625	0.010002	2.1161	2.152E-4
1360	2.7616	0.0098302	2.1159	2.1183E-4
1370	2.7606	0.0096635	2.1157	2.0855E-4
1380	2.7597	0.009502	2.1155	2.0538E-4
1390	2.7588	0.0093455	2.1152	2.0229E-4
1400	2.758	0.0091937	2.115	1.993E-4
1410	2.7571	0.0090464	2.1148	1.9639E-4
1420	2.7563	0.0089036	2.1146	1.9357E-4
1430	2.7554	0.008765	2.1145	1.9082E-4
1440	2.7546	0.0086304	2.1143	1.8815E-4
1450	2.7539	0.0084996	2.1141	1.8556E-4
1460	2.7531	0.0083727	2.1139	1.8303E-4
1470	2.7523	0.0082493	2.1137	1.8057E-4
1480	2.7516	0.0081293	2.1135	1.7818E-4
1490	2.7509	0.0080127	2.1134	1.7585E-4
1500	2.7502	0.0078992	2.1132	1.7359E-4
1510	2.7495	0.0077889	2.113	1.7138E-4
1520	2.7488	0.0076815	2.1129	1.6922E-4
1530	2.7481	0.007577	2.1127	1.6713E-4
1540	2.7475	0.0074752	2.1126	1.6508E-4
1550	2.7468	0.007376	2.1124	1.6309E-4
1560	2.7462	0.0072795	2.1123	1.6114E-4
1570	2.7456	0.0071854	2.1121	1.5924E-4
1580	2.745	0.0070937	2.112	1.5739E-4
1590	2.7444	0.0070042	2.1118	1.5559E-4
1600	2.7438	0.0069171	2.1117	1.5382E-4
1610	2.7432	0.006832	2.1116	1.521E-4
1620	2.7427	0.006749	2.1114	1.5042E-4
1630	2.7421	0.0066681	2.1113	1.4877E-4
1640	2.7416	0.0065891	2.1112	1.4717E-4
1650	2.741	0.0065119	2.111	1.456E-4];


lambda=data(:,1);
n=data(:,4);
k=data(:,5);

result=interp1q(lambda,n,lam)+i.*interp1q(lambda,k,lam);


function result=Ni_disp(lam)
%returns complex number that is refractive index Ni taken from Palik
data=[302.4	1.74	1.99
310	1.73	1.98
317.9	1.72	1.98
326.3	1.69	1.99
335.1	1.66	2.02
344.4	1.64	2.07
354.2	1.63	2.11
364.7	1.62	2.17
375.7	1.61	2.23
387.5	1.61	2.3
400	1.61	2.36
413.3	1.61	2.44
4275	1.62	2.52
442.8	1.62	2.61
459.2	1.64	2.71
476.9	1.66	2.81
495.9	1.67	2.93
516.6	1.71	3.06
539.1	1.75	3.19
563.6	1.8	3.33
590.4	1.85	3.48
619.9	1.93	3.65
635.8	1.98	3.74
652.6	2.02	3.82
670.2	2.08	3.91
688.8	2.14	4
708.5	2.21	4.09
729.3	2.28	4.18
751.4	2.36	4.25
774.9	2.43	4.31
799.9	2.48	4.38
826.6	2.53	4.47
855.1	2.59	4.55
885.6	2.65	4.63
918.4	2.69	4.73
953.7	2.74	4.85
991.9	2.8	4.97
1033	2.85	5.1
1078	2.91	5.24
1127	2.97	5.38
1181	3.01	5.55
1240	3.06	5.74
1305	3.11	5.98
1378	3.18	6.23
1459	3.27	6.51
1550	3.38	6.82
1653	3.49	7.13
1771	3.59	7.48
1907	3.69	7.92
2066	3.84	8.35];

lambda=data(:,1);
n=data(:,2);
k=data(:,3);

result=interp1q(lambda,n,lam)+i.*interp1q(lambda,k,lam);

